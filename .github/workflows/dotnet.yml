name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: dotnet publish
      run: dotnet publish -c Release -o mvctest
    - name: Zip Folder
      run: zip -r App.zip mvctest/*
    - name: Move App.zip to windows-lb/userdata folder
      run: mv App.zip windows-lb/userdata/
    - name: Write Config & Key Files
      run: mkdir ~/.oci && echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
    - name: logging key
      run: cat ~/.oci/key.pem
    - name: Execute terraform code
      uses: hashicorp/setup-terraform@v1
      with: 
        terraform_version: 0.12.25
    - run: cd windows-lb && terraform init && terraform apply -auto-approve

    - uses: EndBug/add-and-commit@v7 # You can change this to use a specific version
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: 'windows-lb/terraform.tfstate'

        # The message for the commit
        message: 'Commiting the state file from Github Actions'

        pull_strategy: '--rebase'

        cwd: '/home/runner/work/testgit/testgit'
        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: true

        # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
        # Default: ''
        tag: 'v1.0.0 --force'
    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}
        
